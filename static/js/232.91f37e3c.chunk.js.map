{"version":3,"file":"static/js/232.91f37e3c.chunk.js","mappings":"wOACA,EAA0B,sBAA1B,EAAwD,oBAAxD,EAAoF,oBAApF,EAAmH,uBAAnH,EAAiJ,mBAAjJ,EAA2K,mBAA3K,EAAqM,mBAArM,EAAoO,wBAApO,EAAsQ,sB,uCCsFtQ,EAjFa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,CAC/BC,OAAQ,GACRC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAaC,EAAb,KAKQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACRH,GAAQ,SAAAI,GACN,OAAO,kBACFA,GADL,IAEEP,SAAS,OAGb,IAAMQ,EAAS,mCAAG,+GAEQC,EAAAA,EAAAA,cAAkBL,GAF1B,OAERM,EAFQ,OAGRX,EAASW,EAAQC,KAAKT,KAC5BC,GAAQ,SAAAI,GACN,OAAO,kBACFA,GADL,IAEEP,SAAS,EACTD,OAAAA,OARU,gDAYdI,GAAQ,SAAAI,GACN,OAAO,kBACFA,GADL,IAEEP,SAAS,EACTC,MAAO,KAAMW,YAhBH,yDAAH,qDAqBfJ,MACC,CAACJ,IAEJ,IAAMS,EAAWX,EAAKH,OAAOe,KAAI,SAAAC,GAC/B,IAAQC,EAA2CD,EAA3CC,aAAcC,EAA6BF,EAA7BE,cAAeC,EAAcH,EAAdG,UAC/BC,EAAQH,EAAY,yCACYA,GAClC,4DAEJ,OACE,gBAAII,UAAWC,EAAf,WACE,gBAAKD,UAAWC,EAASC,IAAKH,EAAOI,IAAI,MAEzC,iBAAKH,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAuBJ,KACvB,eAAGG,UAAWC,EAAd,yBACa,iBAAMD,UAAWC,EAAjB,SAA+BH,gBAO5CnB,EAA2BG,EAA3BH,OAAQC,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAEzB,OACE,qBAASmB,UAAWC,EAApB,UACGrB,IAAW,sCACXC,IACC,iCACE,iDACA,uBAAIA,QAGR,eAAImB,UAAWC,EAAf,kBAECtB,EAAOyB,OAAS,GACf,eAAIJ,UAAWC,EAAf,SAAwBR,KAExB,gBAAKO,UAAWC,EAAhB,4C,yGC/EFI,EAAM,mCACNC,EAAO,gCAEPC,EAAY,mCAAG,WAAMC,GAAN,uFACEC,IAAAA,IAAA,UAChBH,EADgB,gCACeD,EADf,kBAC4BG,IAF9B,cACbE,EADa,yBAIZA,GAJY,2CAAH,sDAOZC,EAAa,mCAAG,oGACCF,IAAAA,IAAA,UAChBH,EADgB,uCACsBD,IAFvB,cACdK,EADc,yBAIbA,GAJa,2CAAH,qDAObE,EAAS,mCAAG,WAAOC,GAAP,uFACKJ,IAAAA,IAAA,UAChBH,EADgB,iBACAO,EADA,oBACcR,IAFnB,cACVK,EADU,yBAITA,GAJS,2CAAH,sDAOTI,EAAa,mCAAG,WAAOD,GAAP,uFACDJ,IAAAA,IAAA,UAAaH,EAAb,iBAA6BO,EAA7B,4BAAmDR,IADlD,cACdvB,EADc,yBAEbA,GAFa,2CAAH,sDAKbiC,EAAgB,mCAAG,WAAOF,GAAP,uFACDJ,IAAAA,IAAA,UAAaH,EAAb,iBAA6BO,EAA7B,4BAAmDR,IADlD,cACjBW,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKT3B,EAAM,CACjB4B,QAASV,EACTW,SAAUP,EACVQ,KAAMP,EACNG,iBAAAA,EACAD,cAAAA","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","services/fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"cast_section__xx7rU\",\"title\":\"cast_title__R2CBp\",\"image\":\"cast_image__tExbg\",\"listItem\":\"cast_listItem__Km70l\",\"list\":\"cast_list__bULim\",\"meta\":\"cast_meta__C5UEH\",\"info\":\"cast_info__B4-J4\",\"character\":\"cast_character__Erja1\",\"message\":\"cast_message__dbaQc\"};","import s from './cast.module.css';\n\nimport { API } from 'services/fetch';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [cast, setCast] = useState({\n    actors: [],\n    loading: false,\n    error: null,\n  });\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setCast(prevState => {\n      return {\n        ...prevState,\n        loading: true,\n      };\n    });\n    const fetchCast = async () => {\n      try {\n        const fetched = await API.fetchCastById(movieId);\n        const actors = fetched.data.cast;\n        setCast(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n            actors,\n          };\n        });\n      } catch (error) {\n        setCast(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n            error: error.mesage,\n          };\n        });\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  const elements = cast.actors.map(actor => {\n    const { profile_path, original_name, character } = actor;\n    const image = profile_path\n      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n      : 'https://sd.keepcalms.com/i/keep-calm-poster-not-found.png';\n\n    return (\n      <li className={s.listItem}>\n        <img className={s.image} src={image} alt=\"\" />\n\n        <div className={s.meta}>\n          <p className={s.info}>{original_name}</p>\n          <p className={s.info}>\n            Character: <span className={s.character}>{character}</span>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  const { actors, loading, error } = cast;\n\n  return (\n    <section className={s.section}>\n      {loading && <p>Loading...</p>}\n      {error && (\n        <>\n          <p>Server error occured</p>\n          <p>{error}</p>\n        </>\n      )}\n      <h2 className={s.title}>Cast</h2>\n\n      {actors.length > 0 ? (\n        <ul className={s.list}>{elements}</ul>\n      ) : (\n        <div className={s.message}>There are no cast details</div>\n      )}\n    </section>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst key = '313da384ffe4ec90efea6fc8b4aa73ee';\nconst baseURL = `https://api.themoviedb.org/3/`;\n\nconst fetchByQuery = async query => {\n  const movies = await axios.get(\n    `${baseURL}search/movie?api_key=${key}&query=${query}`\n  );\n  return movies;\n};\n\nconst fetchTrending = async () => {\n  const movies = await axios.get(\n    `${baseURL}trending/movie/week?api_key=${key}`\n  );\n  return movies;\n};\n\nconst fetchById = async (id) => {\n  const movies = await axios.get(\n    `${baseURL}movie/${id}?api_key=${key}`\n  );\n  return movies;\n}\n\nconst fetchCastById = async (id) => {\n  const cast = await axios.get(`${baseURL}movie/${id}/credits?api_key=${key}`)\n  return cast\n}\n\nconst fetchReviewsById = async (id) => {\n  const reviews = await axios.get(`${baseURL}movie/${id}/reviews?api_key=${key}`)\n  return reviews\n}\n\nexport const API = {\n  byQuery: fetchByQuery,\n  trending: fetchTrending,\n  byId: fetchById,\n  fetchReviewsById,\n  fetchCastById,\n};\n"],"names":["useState","actors","loading","error","cast","setCast","movieId","useParams","useEffect","prevState","fetchCast","API","fetched","data","mesage","elements","map","actor","profile_path","original_name","character","image","className","s","src","alt","length","key","baseURL","fetchByQuery","query","axios","movies","fetchTrending","fetchById","id","fetchCastById","fetchReviewsById","reviews","byQuery","trending","byId"],"sourceRoot":""}