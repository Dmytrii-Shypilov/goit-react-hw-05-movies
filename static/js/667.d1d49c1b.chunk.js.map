{"version":3,"file":"static/js/667.d1d49c1b.chunk.js","mappings":"uKACA,MAA0B,6BAA1B,EAA8D,0BAA9D,EAAmG,8BAAnG,EAAwI,0B,4BCIlIA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChBC,GAAWC,EAAAA,EAAAA,MACf,OACE,oBAASC,UAAWC,EAApB,UACE,eAAID,UAAWC,EAAf,SACGJ,GACCA,EAAOK,KAAI,SAAAC,GACT,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACZ,OACE,eAAaL,UAAWC,EAAxB,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAQK,MAAO,CAACC,KAAMT,GAAWU,GAAE,kBAAaJ,GAAjE,SAAwEC,KADjED,WAUvB,IAEAR,EAAWa,aAAe,CACxBZ,OAAQ,K,sHC1BV,EAA0B,2BAA1B,EAA6D,yB,uCC4D7D,EAvDiB,WACf,OAAsCa,EAAAA,EAAAA,UAAS,CAC7Cb,OAAQ,GACRc,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAoBC,EAApB,MAMAC,EAAAA,EAAAA,YAAU,WAAM,wCAOd,+GAE0BC,EAAAA,EAAAA,WAF1B,OAEUC,EAFV,OAGUpB,EAASoB,EAAQC,KAAKC,QAC5BL,GAAe,SAAAM,GACb,OAAO,kBACFA,GADL,IAEET,SAAS,EACTd,OAAAA,OARR,gDAYIiB,GAAe,SAAAM,GACb,OAAO,kBACFA,GADL,IAEET,SAAS,EACTC,MAAO,KAAMS,aAhBrB,0DAPc,sBACdP,GAAe,SAAAM,GACb,OAAO,kBACFA,GADL,IAEET,SAAS,OAJC,mCA4BdW,KACC,IAEH,IAAQzB,EAA2BgB,EAA3BhB,OAAQc,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAEzB,OACE,qBAASZ,UAAWC,EAApB,UACGU,IAAW,sCACXC,IACC,iCACE,iDACA,uBAAIA,QAGR,eAAIZ,UAAWC,EAAf,8BACA,SAACL,EAAA,EAAD,CAAYC,OAAQA,S,yGCtDpB0B,EAAM,mCACNC,EAAO,gCAEPC,EAAY,mCAAG,WAAMC,GAAN,uFACEC,IAAAA,IAAA,UAChBH,EADgB,gCACeD,EADf,kBAC4BG,IAF9B,cACb7B,EADa,yBAIZA,GAJY,2CAAH,sDAOZ+B,EAAa,mCAAG,oGACCD,IAAAA,IAAA,UAChBH,EADgB,uCACsBD,IAFvB,cACd1B,EADc,yBAIbA,GAJa,2CAAH,qDAObgC,EAAS,mCAAG,WAAOzB,GAAP,uFACKuB,IAAAA,IAAA,UAChBH,EADgB,iBACApB,EADA,oBACcmB,IAFnB,cACV1B,EADU,yBAITA,GAJS,2CAAH,sDAOTiC,EAAa,mCAAG,WAAO1B,GAAP,uFACDuB,IAAAA,IAAA,UAAaH,EAAb,iBAA6BpB,EAA7B,4BAAmDmB,IADlD,cACdQ,EADc,yBAEbA,GAFa,2CAAH,sDAKbC,EAAgB,mCAAG,WAAO5B,GAAP,uFACDuB,IAAAA,IAAA,UAAaH,EAAb,iBAA6BpB,EAA7B,4BAAmDmB,IADlD,cACjBU,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKTjB,EAAM,CACjBkB,QAAST,EACTU,SAAUP,EACVQ,KAAMP,EACNG,iBAAAA,EACAF,cAAAA","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/movies-list.module.css?3466","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage/home-page.module.css?ebe0","pages/HomePage/HomePage.jsx","services/fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"movies-list_section__eDIhF\",\"list\":\"movies-list_list__QsEHr\",\"listItem\":\"movies-list_listItem__AiXdG\",\"link\":\"movies-list_link__nBtgH\"};","import s from './movies-list.module.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nconst MoviesList = ({ movies }) => {\nconst location = useLocation()\n  return (\n    <section className={s.section}>\n      <ul className={s.list}>\n        {movies &&\n          movies.map(movie => {\n            const { id, title } = movie;\n            return (\n              <li key={id} className={s.listItem}>\n                <Link className={s.link} state={{from: location}} to={`/movies/${id}`}>{title}</Link>\n              </li>\n            );\n          })}\n      </ul>\n    </section>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propsDefault = {\n  movies: [],\n}\n\nMoviesList.propTypes = {\nmovies: PropTypes.arrayOf(PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired\n}))\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"home-page_section__7H6n5\",\"title\":\"home-page_title__fc3KH\",\"listItem\":\"home-page_listItem__DRbCN\"};","import s from './home-page.module.css';\nimport MoviesList from 'components/MoviesList';\nimport { useState, useEffect } from 'react';\n\nimport { API } from 'services/fetch';\n\nconst HomePage = () => {\n  const [trendMovies, SetTrendMovies] = useState({\n    movies: [],\n    loading: false,\n    error: null,\n  });\n\n  useEffect(() => {\n    SetTrendMovies(prevState => {\n      return {\n        ...prevState,\n        loading: true,\n      };\n    });\n    async function fetchTrendMovies() {\n      try {\n        const fetched = await API.trending();\n        const movies = fetched.data.results;\n        SetTrendMovies(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n            movies,\n          };\n        });\n      } catch (error) {\n        SetTrendMovies(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n            error: error.message,\n          };\n        });\n      }\n    }\n    fetchTrendMovies();\n  }, []);\n\n  const { movies, loading, error } = trendMovies;\n\n  return (\n    <section className={s.section}>\n      {loading && <p>Loading...</p>}\n      {error && (\n        <>\n          <p>Server error occured</p>\n          <p>{error}</p>\n        </>\n      )}\n      <h1 className={s.title}>Movies in trend</h1>\n      <MoviesList movies={movies} />\n    </section>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst key = '313da384ffe4ec90efea6fc8b4aa73ee';\nconst baseURL = `https://api.themoviedb.org/3/`;\n\nconst fetchByQuery = async query => {\n  const movies = await axios.get(\n    `${baseURL}search/movie?api_key=${key}&query=${query}`\n  );\n  return movies;\n};\n\nconst fetchTrending = async () => {\n  const movies = await axios.get(\n    `${baseURL}trending/movie/week?api_key=${key}`\n  );\n  return movies;\n};\n\nconst fetchById = async (id) => {\n  const movies = await axios.get(\n    `${baseURL}movie/${id}?api_key=${key}`\n  );\n  return movies;\n}\n\nconst fetchCastById = async (id) => {\n  const cast = await axios.get(`${baseURL}movie/${id}/credits?api_key=${key}`)\n  return cast\n}\n\nconst fetchReviewsById = async (id) => {\n  const reviews = await axios.get(`${baseURL}movie/${id}/reviews?api_key=${key}`)\n  return reviews\n}\n\nexport const API = {\n  byQuery: fetchByQuery,\n  trending: fetchTrending,\n  byId: fetchById,\n  fetchReviewsById,\n  fetchCastById,\n};\n"],"names":["MoviesList","movies","location","useLocation","className","s","map","movie","id","title","state","from","to","propsDefault","useState","loading","error","trendMovies","SetTrendMovies","useEffect","API","fetched","data","results","prevState","message","fetchTrendMovies","key","baseURL","fetchByQuery","query","axios","fetchTrending","fetchById","fetchCastById","cast","fetchReviewsById","reviews","byQuery","trending","byId"],"sourceRoot":""}