{"version":3,"file":"static/js/326.73ec9944.chunk.js","mappings":"wOACA,EAA0B,yBAA1B,EAA2D,uBAA3D,EAAyF,sBAAzF,EAAwH,wBAAxH,EAA0J,yBAA1J,EAA6L,yB,uCC2E7L,EAtEgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,CACrCC,SAAU,GACVC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAgBC,EAAhB,KAKQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACRH,GAAW,SAAAI,GACT,OAAO,kBACFA,GADL,IAEEP,SAAS,OAGb,IAAMQ,EAAY,mCAAG,+GAEKC,EAAAA,EAAAA,iBAAqBL,GAF1B,OAEXM,EAFW,OAGXR,EAAUQ,EAAQC,KAAKC,QAC7BT,GAAW,SAAAI,GACT,OAAO,kBACFA,GADL,IAEER,SAAUG,EACVF,SAAS,OARI,gDAYjBG,GAAW,SAAAI,GACT,OAAO,kBACFA,GADL,IAEEP,SAAS,EACTC,MAAO,KAAMY,aAhBA,yDAAH,qDAqBlBL,MACC,CAACJ,IAEJ,IAAMU,EAAWZ,EAAQH,SAASgB,KAAI,SAAAC,GACpC,IAAQC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAChB,OACE,2BACE,cAAGC,UAAWC,EAAd,SAAyBH,KACzB,cAAGE,UAAWC,EAAd,SAA0BF,UAKxBnB,EAA6BG,EAA7BH,SAAUC,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAE3B,OACE,qBAASkB,UAAWC,EAApB,UACGpB,IAAW,sCACXC,IACC,iCACE,iDACA,uBAAIA,QAGR,eAAIkB,UAAWC,EAAf,qBACCrB,EAASsB,OAAS,GACjB,gBAAIF,UAAWC,EAAf,UAAwBN,EAAxB,QAEA,gBAAKK,UAAWC,EAAhB,4C,yGCpEFE,EAAM,mCACNC,EAAO,gCAEPC,EAAY,mCAAG,WAAMC,GAAN,uFACEC,IAAAA,IAAA,UAChBH,EADgB,gCACeD,EADf,kBAC4BG,IAF9B,cACbE,EADa,yBAIZA,GAJY,2CAAH,sDAOZC,EAAa,mCAAG,oGACCF,IAAAA,IAAA,UAChBH,EADgB,uCACsBD,IAFvB,cACdK,EADc,yBAIbA,GAJa,2CAAH,qDAObE,EAAS,mCAAG,WAAOC,GAAP,uFACKJ,IAAAA,IAAA,UAChBH,EADgB,iBACAO,EADA,oBACcR,IAFnB,cACVK,EADU,yBAITA,GAJS,2CAAH,sDAOTI,EAAa,mCAAG,WAAOD,GAAP,uFACDJ,IAAAA,IAAA,UAAaH,EAAb,iBAA6BO,EAA7B,4BAAmDR,IADlD,cACdU,EADc,yBAEbA,GAFa,2CAAH,sDAKbC,EAAgB,mCAAG,WAAOH,GAAP,uFACDJ,IAAAA,IAAA,UAAaH,EAAb,iBAA6BO,EAA7B,4BAAmDR,IADlD,cACjBpB,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKTO,EAAM,CACjByB,QAASV,EACTW,SAAUP,EACVQ,KAAMP,EACNI,iBAAAA,EACAF,cAAAA","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/Reviews.jsx","pages/services/fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"reviews_section__du-iK\",\"title\":\"reviews_title__nRRiP\",\"list\":\"reviews_list__BCK8P\",\"author\":\"reviews_author__URyxt\",\"comment\":\"reviews_comment__e3Mse\",\"message\":\"reviews_message__vOEpN\"};","import s from './reviews.module.css';\n\nimport { API } from 'pages/services/fetch';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState({\n    comments: [],\n    loading: false,\n    error: null,\n  });\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setReviews(prevState => {\n      return {\n        ...prevState,\n        loading: true,\n      };\n    });\n    const fetchReviews = async () => {\n      try {\n        const fetched = await API.fetchReviewsById(movieId);\n        const reviews = fetched.data.results;\n        setReviews(prevState => {\n          return {\n            ...prevState,\n            comments: reviews,\n            loading: false,\n          };\n        });\n      } catch (error) {\n        setReviews(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n            error: error.message,\n          };\n        });\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  const elements = reviews.comments.map(comment => {\n    const { author, content } = comment;\n    return (\n      <li>\n        <p className={s.author}>{author}</p>\n        <p className={s.comment}>{content}</p>\n      </li>\n    );\n  });\n\n  const { comments, loading, error } = reviews;\n\n  return (\n    <section className={s.section}>\n      {loading && <p>Loading...</p>}\n      {error && (\n        <>\n          <p>Server error occured</p>\n          <p>{error}</p>\n        </>\n      )}\n      <h2 className={s.title}>Reviews</h2>\n      {comments.length > 0 ? (\n        <ul className={s.list}>{elements} </ul>\n      ) : (\n        <div className={s.message}>There are no comments yet</div>\n      )}\n    </section>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst key = '313da384ffe4ec90efea6fc8b4aa73ee';\nconst baseURL = `https://api.themoviedb.org/3/`;\n\nconst fetchByQuery = async query => {\n  const movies = await axios.get(\n    `${baseURL}search/movie?api_key=${key}&query=${query}`\n  );\n  return movies;\n};\n\nconst fetchTrending = async () => {\n  const movies = await axios.get(\n    `${baseURL}trending/movie/week?api_key=${key}`\n  );\n  return movies;\n};\n\nconst fetchById = async (id) => {\n  const movies = await axios.get(\n    `${baseURL}movie/${id}?api_key=${key}`\n  );\n  return movies;\n}\n\nconst fetchCastById = async (id) => {\n  const cast = await axios.get(`${baseURL}movie/${id}/credits?api_key=${key}`)\n  return cast\n}\n\nconst fetchReviewsById = async (id) => {\n  const reviews = await axios.get(`${baseURL}movie/${id}/reviews?api_key=${key}`)\n  return reviews\n}\n\nexport const API = {\n  byQuery: fetchByQuery,\n  trending: fetchTrending,\n  byId: fetchById,\n  fetchReviewsById,\n  fetchCastById,\n};\n"],"names":["useState","comments","loading","error","reviews","setReviews","movieId","useParams","useEffect","prevState","fetchReviews","API","fetched","data","results","message","elements","map","comment","author","content","className","s","length","key","baseURL","fetchByQuery","query","axios","movies","fetchTrending","fetchById","id","fetchCastById","cast","fetchReviewsById","byQuery","trending","byId"],"sourceRoot":""}