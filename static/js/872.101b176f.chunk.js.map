{"version":3,"file":"static/js/872.101b176f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/movie-details.module.css?3d4a","pages/MovieDetailsPage/MovieDetailsPage.jsx","pages/services/fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"movie-details_section__Yk9ge\",\"image\":\"movie-details_image__kJm5t\",\"movie\":\"movie-details_movie__lPArM\",\"description\":\"movie-details_description__ikt-K\",\"button\":\"movie-details_button__oEzdQ\",\"info\":\"movie-details_info__-8EnB\",\"title\":\"movie-details_title__UUuQQ\",\"vote\":\"movie-details_vote__zPPJ2\",\"genres\":\"movie-details_genres__nj4fx\",\"linksList\":\"movie-details_linksList__GrYgV\",\"listItem\":\"movie-details_listItem__BO1JU\",\"link\":\"movie-details_link__rJiv2\",\"active\":\"movie-details_active__SWjGQ\"};","import s from './movie-details.module.css';\nimport {\n  useParams,\n  NavLink,\n  useNavigate,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { API } from 'pages/services/fetch';\n\n\nconst getClassName = ({isActive}) => {\n  console.log({isActive})\n  return isActive ? `${s.link} ${s.active}` : s.link\n}\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location?.state?.from || '/';\n\n  const [movie, setMovie] = useState({\n    item: {},\n    error: null,\n    loading: false,\n  });\n\n  useEffect(() => {\n    setMovie(prevState => {\n      return {\n        ...prevState,\n        loading: true,\n      };\n    });\n    const fetchMovie = async () => {\n      try {\n        const { data } = await API.byId(movieId);\n\n        setMovie(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n            item: data,\n          };\n        });\n      } catch (error) {\n        setMovie(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n            error: error.message,\n          };\n        });\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  const goBack = () => {\n    navigate(from);\n  };\n\n  const { item, loading, error } = movie;\n  const { vote_average, poster_path, title, overview, genres } = item;\n  const image = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : 'https://sd.keepcalms.com/i/keep-calm-poster-not-found.png';\n\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {error && (\n        <>\n          <p>Server error occured</p>\n          <p>{error}</p>\n        </>\n      )}\n      {Object.keys(item).length > 0 && (\n        <div>\n          <section className={s.section}>\n            <button className={s.button} onClick={goBack}>\n              Go back\n            </button>\n            <div className={s.movie}>\n              <img\n                className={s.image}\n                height=\"auto\"\n                src={image}\n                alt=\"\"\n              />\n\n              <ul className={s.linksList}>\n                <li className={s.listItem}>\n                  <NavLink\n                    state={{ from }}\n                    className={getClassName}\n                    to={`/movies/${movieId}/cast`}\n                  >\n                    Cast\n                  </NavLink>\n                </li>\n                <li className={s.listItem}>\n                  <NavLink\n                    state={{ from }}\n                    className={getClassName}\n                    to={`/movies/${movieId}/reviews`}\n                  >\n                    Reviews\n                  </NavLink>\n                </li>\n              </ul>\n\n              <div className={s.description}>\n                <h2 className={s.title}>{title}</h2>\n                <span className={s.info}>\n                  Users Score: <span className={s.vote}>{vote_average}</span>\n                </span>\n\n                <span className={s.info}>Overview:</span>\n                <p>{overview}</p>\n\n                <span className={s.info}>\n                  Genres:\n                  <span className={s.genres}>\n                    {genres && genres.map(({ name }) => name).join(', ')}\n                  </span>\n                </span>\n              </div>\n            </div>\n          </section>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst key = '313da384ffe4ec90efea6fc8b4aa73ee';\nconst baseURL = `https://api.themoviedb.org/3/`;\n\nconst fetchByQuery = async query => {\n  const movies = await axios.get(\n    `${baseURL}search/movie?api_key=${key}&query=${query}`\n  );\n  return movies;\n};\n\nconst fetchTrending = async () => {\n  const movies = await axios.get(\n    `${baseURL}trending/movie/week?api_key=${key}`\n  );\n  return movies;\n};\n\nconst fetchById = async (id) => {\n  const movies = await axios.get(\n    `${baseURL}movie/${id}?api_key=${key}`\n  );\n  return movies;\n}\n\nconst fetchCastById = async (id) => {\n  const cast = await axios.get(`${baseURL}movie/${id}/credits?api_key=${key}`)\n  return cast\n}\n\nconst fetchReviewsById = async (id) => {\n  const reviews = await axios.get(`${baseURL}movie/${id}/reviews?api_key=${key}`)\n  return reviews\n}\n\nexport const API = {\n  byQuery: fetchByQuery,\n  trending: fetchTrending,\n  byId: fetchById,\n  fetchReviewsById,\n  fetchCastById,\n};\n"],"names":["getClassName","isActive","console","log","s","movieId","useParams","navigate","useNavigate","location","useLocation","from","state","useState","item","error","loading","movie","setMovie","useEffect","prevState","fetchMovie","API","data","message","vote_average","poster_path","title","overview","genres","image","Object","keys","length","className","onClick","height","src","alt","to","map","name","join","key","baseURL","fetchByQuery","query","axios","movies","fetchTrending","fetchById","id","fetchCastById","cast","fetchReviewsById","reviews","byQuery","trending","byId"],"sourceRoot":""}